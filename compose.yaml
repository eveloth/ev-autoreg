version: '3.8'

networks:
  ev-autoreg:
    name: ev-autoreg

services:
  evautoreg.api:
    image: evautoreg.api
    build:
      context: ./
      dockerfile: src/EvAutoreg.Api/Dockerfile
    restart: unless-stopped
    depends_on: 
      - "evautoreg.postgres"
      - "evautoreg.redis"
    ports:
      - "${API_HOST:-127.0.0.1}:${API_PORT}:80"
    networks:
      - ev-autoreg
    env_file:
      - .env

  evautoreg.autoregistrar:
    image: evautoreg.autoregistrar
    build:
      context: ./
      dockerfile: src/EvAutoreg.Autoregistrar/Dockerfile
    restart: unless-stopped
    depends_on: 
      - "evautoreg.postgres"
      - "evautoreg.api"
    ports:
      - "${AUTOREG_HOST:-127.0.0.1}:${AUTOREG_PORT}:80"
    networks:
      - ev-autoreg
    env_file:
      - .env

  evautoreg.postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${PG_DB:-ev_autoreg_db}"
      POSTGRES_USER: "${PG_USER}"
      POSTGRES_PASSWORD: "${PG_PASS}"
      PGDATA: "/var/lib/pgsql/data"
    volumes:
      - /opt/ev-autoreg/pgsql/data:/var/lib/pgsql/data
    ports:
      - "${POSTGRES_HOST:-127.0.0.1}:${POSTGRES_PORT}:5432"
    networks:
      - ev-autoreg
    env_file:
      - .env

  evautoreg.redis:
    image: redis:7.0
    restart: unless-stopped
    command: >
      --requirepass ${REDISOPTIONS__PASSWORD}
    ports:
      - "${REDIS_HOST:-127.0.0.1}:${REDIS_PORT}:6379"
    volumes:
      - /opt/ev-autoreg/redis:/data
    networks:
      - ev-autoreg
    env_file:
      - .env
